[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-rasterio-assignment"
version = "1.0.0"
description = "GIST 604B - Python Rasterio Assignment: Core Raster Processing Functions"
readme = "README.md"
authors = [
    {name = "Student", email = "student@arizona.edu"},
]
license = {text = "MIT"}
keywords = ["gis", "rasterio", "raster", "python", "geospatial"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Education",
]
requires-python = ">=3.11"

dependencies = [
    # Core raster processing
    "rasterio>=1.3.9,<2.0",
    "numpy>=1.26.0,<2.0",

    # Geospatial operations
    "shapely>=2.0.0,<3.0",
    "geopandas>=0.14.0,<0.15.0",
    "pandas>=2.1.0,<3.0",
    "pyproj>=3.6.0,<4.0",
    "fiona>=1.9.0,<2.0",

    # Visualization
    "matplotlib>=3.8.0,<4.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0,<8.0",
    "pytest-cov>=4.1.0,<5.0",
    "pytest-html>=4.1.0,<5.0",
    "pytest-timeout>=2.2.0,<3.0",
]

dev = [
    "black>=23.0.0,<25.0",
    "ruff>=0.1.0,<1.0",
    "mypy>=1.5.0,<2.0",
]

[project.urls]
Repository = "https://github.com/ua-gist604b/python-rasterio"
Documentation = "https://github.com/ua-gist604b/python-rasterio#readme"
"Bug Tracker" = "https://github.com/ua-gist604b/python-rasterio/issues"

# ==============================================================================
# Tool Configuration
# ==============================================================================

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

# Ruff linting
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",   # Line too long, handled by black
    "B008",   # Do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B018", "S101"]

# MyPy type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "rasterio.*",
    "geopandas.*",
    "shapely.*",
    "fiona.*",
    "pyproj.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow running",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore:.*GDAL.*:UserWarning",
    "ignore:.*Rasterio.*:UserWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
show_missing = true
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
